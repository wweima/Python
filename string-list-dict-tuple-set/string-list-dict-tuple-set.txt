# string-list-dict-tuple-set
python3 字符串 列表 字典 元组 集合整理

# 对python3中字符串 列表 字典 元组 集合进行相关比价整理梳理,以便日后查阅
# first 字符串 string
# 在python中用"" ''来表示字符串
# 拼接 + *
# -----------但是需要注意的是 字符串形式的数据不可以和数字类型的数据直接进行拼接---------
# 截取 :
# 字符串名[索引值] 提取一个字符
# 索引值可以为负数,表示字符串从末尾最右侧开始数,倒序 str[::-step]
# 角标不可以越界,不然会报错  ndexError: string index out of range 角标越界异常
# 获取字符串长度: 
str1 = "Amy is good gril"
print(len(str1))
# 截取一定范围的字符串
# 格式:[tart:stop:step] 包含start不包含stop,step步长
# 逆序固定格式 str[::-step]
# 字符串格式化:
# %s替代一个可变的字符串,%d代表一个可变的整数,%f代表一个可变的浮点数 %.数值f表示保留多少小数位
name = "Amy"
age = 12
height = 176.234456
print("name:%s,age:%d,height:%.3f"%(name,age,height))
# 转义字符
print("人生自古谁无死,\n留取丹心照汗青") # 换行\n
print("""
人生自古谁无死
留取丹心照汗青
""") #""" 控制输出格式 """
# Windows操作系统路径都是以反斜杠\来链接的
# Linux操作系统都是以正斜杠/来连接的
# 通常用r来解决多个\输出的问题
pathFile = r"Program Files (x86)\Windows Defender\zh-CN"
print("patnFile")
# --------------------------------分割线-------------------------------------------------
# --------------------------------分割线-------------------------------------------------

# second list列表
# list列表是用来存放多个元素的,每个元素之间用逗号隔开
# 特点:有序可重复,在python中一个列表可以存放不同类型的元素
# 格式:list = []
# 从python列表中获取数据
# 角标获取
list1 = ["面包","早餐包","三明治","番茄酱",666]
print(list1[2]) # 三明治
# 角标可以是负数,如果是负数,则表示从末尾开始数
print(list1[-1]) #番茄酱
# 角标不能超过列表长度 
print(len(list1)) #获取list1列表的长度
# 列表拼接 + *
# 判断一个元素是否在list1列表中
if "薯条" in list1:
  print("薯条在list1列表中")
else:
  print("薯条不在list1列表中")
# 截取 list[start:stop:step] 含头不含尾
# 倒序 list[::-step] 固定格式
# 二维列表
list2 = [[1,2,3],[4,5,6],[7,8,9]]
print(list2[1][2] #输出6
# 三维列表 用于机器学习
list3 = [[[1,2,3],[4,5,6],[7,8,9]],[[10,11,12],[13,14,15],[16,17,18]],[[14,15,16],[17,18,19],[20,21,22]]]
print(list3[1][2][1]) #输出17
# 取出二维数组list2列表中所有的数
line = 0
while len(list2):
  column = 0
  while column < len(list2[line]):
    print(list2[line][column])
    column += 1
   line += 1
# 增 删 改 查
list4 = ["包子","油条","豆浆","豆腐脑","粽子"]
# 增 append() extend() insert()
# list.append() 向列表末尾添加一个元素,对原列表进行操作,原列表发生改变
list4.append("面包")
print(list4) #输出 ["包子","油条","豆浆","豆腐脑","粽子","面包"]
#list.extend() 向列表末尾添加多个元素,对原列表进行操作,原列表发生改变
list4.extend("牛奶","三明治","茶叶蛋")
print(list4) #输出 ["包子","油条","豆浆","豆腐脑","粽子","面包","牛奶","三明治","茶叶蛋"]
# list.insert(参数1,参数2) 向列表某一位置插入一个值 参数1表示角标,参数2表示要插入的值
list4.insert(2,"番茄汁")
print(list4) #输出 ["包子","油条","豆浆","番茄汁","豆腐脑","粽子","面包","牛奶","三明治","茶叶蛋"]
# 删 pop() remove()
# list.pop() 不传参时默认是删除末尾的值,传参时,传入的是角标
list4.pop()  # 把末位置删掉
print(list4) # 输出["包子","油条","豆浆","番茄汁","豆腐脑","粽子","面包","牛奶","三明治"]
list4.pop(2) # 把角标为2的值删掉
print(list4) # 输出["包子","油条","番茄汁","豆腐脑","粽子","面包","牛奶","三明治"]
# 改
list4[0] = "薯条"
print(list4) # 输出["薯条","油条","番茄汁","豆腐脑","粽子","面包","牛奶","三明治"]
# 查 根据角标查元素 根据元素查角标
# 根据角标查元素
print(list4[4]) # 输出["粽子"]
# 根据元素查角标 list.index()
print(list4.index("番茄汁") #输出 2
# 最大值max 最小值min
list5 = [12,23,34,1,-34,56,25]
# 最大值 max(list)
print(max(list5))
# 最小值 min(list)
print(min(list))
# 排序
# 升序sorted() 会产生一个排序后的新的列表
# 产生新的序列后并不需要赋值给新的元素; 不产生新的序列的需要赋值给一个新的元素
sorted(list5)
print(list5)
# 升序list.sort() 将原列表进行排序,并不产生新的列表
list6 = list5.sort()
print(list6)
# 降序 sorted(list,reverse = True) reverse表示是否翻转 产生新列表
sorted(list6,reverse = True)
print(list6)
# 翻转 list.reverse() 产生新列表
list6.reverse()
print(list6)
# 去重 
list7 = [12,23,34,12,56,78,67]
count1 = list7.count(12)
print(count1)
for i in range(count):
  list7.remove(12)
 print(list7)
# list中copy和deepcope
# 笔试题

list1 = [0,1,2,3,4,5]
list2 = list1
list2[0] = 100
print(list1,list2)

list1 = [0,1,2,3,4,5]
list2 = list1.copy()
list2[0] = 100
print(list1,list2)

list1 = [[7,8,9],1,2,3,4,5]
list2 = list1.copy()
list2[0] = 100
print(list1,list2)

list1 = [[7,8,9],1,2,3,4,5]
list2 = list1.copy()
list2[0][0] = 100
print(list1,list2)

import copy
list1 = [[7,8,9],1,2,3,4,5]
list2 = copy.deepcopy(list1)
list2[0] = 100
print(list1,list2)
# --------------------------------分割线-------------------------------------------------
# --------------------------------分割线-------------------------------------------------

# third 字典dict
# 概述:字典是以key-value(键值对)的形式来存储数据的,字典是无序的,方便查找,查找速度快,字典是可变类型
# 格式:dict = {key1:value1,key2:value2,key3:value3,...}
# key的特点:key是唯一的,key是不可变类型,key值不可重复,若重复只会保留一个key对应的值
# 创建一个空字典
dict1 = {}
# 创建一个多个值的字典
dict2 = {"name1":"易烊千玺","name2":"王俊凯","name3":"张一山","name4":"胡歌"}
# 增
# 格式: 字典名[key] = 值 如果key值已经存在,则表示的是修改对应的value值;如果key值不存在,则表示的是向该字典中添加一个新的键值对
dict2["name5"] = "向左"
print(dict2)
# 删\改 dict.pop(key,defauly)
# 根据key值来删除一个值,会返回删除的值,如果key不存在,且没有设置default值,会抛异常;如果设置了default的值,则不会返回缺省值
dict2.pop("name2","哇哈哈")
# 判断key是否属于字典中的成员
if "name7" in dict2:
  print("存在name7")
else:
  print("不存在name7")
# 查 字典通过key值来获取value值,字典是无序的,不可以用索引来获取
# 例 name = dict[3] # 错误
name = dict2["name3]
print(name) # 输出 张一山
# 通过get(key,参数2)方法来获取值,当该值不存在的时候会用设置的参数2来自动补全
names = dict2.get("name1","哇哦")
names1 = dict2.get("name8","哇哦")
print(names,names1)
# 字典的五种遍历 (笔试题)
# 字典的第一种遍历
for key in dist2:
  print(key,dist2[key])
# 字典的第二种遍历
for index,i in enumerate(dict2):
  print(index,key,dict2[key])
# 字典的第三种遍历 keys()获取所有元素的key值
for key in dict2.keys():
  print(key,dict2[key])
# 字典的第四种遍历 values()获取所有元素的vlaue值
for value in dict2.values():
  print(value)
# 字典的第五种遍历 items() 获取所有key-value键值对
for key,value in dict2.items():
 print(key,value)
  
# dict与list比较
# dict字典:dict字典对于查找 插入的速度非常快,随着数据量的增加,对速度并不产生特别大的影响,key值方便取值,但是字典需要的内存较大,比较消耗内存
# list列表:list列表对于查找 插入的速度相相对而言较慢,随着数据量的增加,对速度会产生较大的影响,但是列表需要的内存较小,比较节约内存
# copy 操作 复制
dict4 ={"app1":"橘子","app2":"苹果","app3":"火龙果","app4":"猕猴桃"}
# dict5 = dict4  不可完成复制操作 错的
# dict5["app1"] = "菠萝蜜"
# print("dict4: ",dict5)
# print("dict5: ",dict5)
dict5 = dict4.copy()
dict5["app1"] = "菠萝蜜"
print("dict4: ",dict5)
print("dict5: ",dict5)
# 笔试题
# copy和deepcopy
list1 = [0,1,2,3,4,5]
list2 = list1
list2[0] = 100
print(list1,list2)

list1 = [0,1,2,3,4,5]
list2 = list1.copy()
list2[0] = 100
print(list1,list2)

list1 = [[7,8,9],1,2,3,4,5]
list2 = list1.copy()
list2[0] = 100
print(list1,list2)

list1 = [[7,8,9],1,2,3,4,5]
list2 = list1.copy()
list2[0][0] = 100
print(list1,list2)

import copy
list1 = [[7,8,9],1,2,3,4,5]
list2 = copy.deepcopy(list1)
list2[0] = 100
print(list1,list2)
# --------------------------------分割线-------------------------------------------------
# --------------------------------分割线-------------------------------------------------

# 元组tuple
# 元组时一个有序的,可以重复的集合,元组可以存放不用类型的元素
# 特点:1.与list类似 2.不可变类型 3.元组使用的是小括号
# 格式: tuple = (元素1,元素2,元素3,...)




 
